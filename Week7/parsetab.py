
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocFORALLEXISTSrightIMPLIESleftORleftANDrightNOTnonassocEQUALSAND COLON COMMA EQUALS EXISTS FALSE FORALL IMPLIES LPAREN NOT OR RPAREN SYMBOL TRUEFORMULA : FORALL SYMBOL COLON FORMULA\n                   | EXISTS SYMBOL COLON FORMULAFORMULA : FORMULA IMPLIES FORMULA\n                   | FORMULA OR FORMULA\n                   | FORMULA AND FORMULAFORMULA : NOT FORMULAFORMULA : FALSE\n                   | TRUEFORMULA : LPAREN FORMULA RPARENFORMULA : SYMBOLFORMULA : TERM EQUALS TERMTERM : SYMBOL LPAREN TERMLIST RPAREN\n                | SYMBOLTERMLIST : TERM COMMA TERMLIST\n                    | TERM'
    
_lr_action_items = {'FORALL':([0,5,8,10,11,12,22,26,],[2,2,2,2,2,2,2,2,]),'EXISTS':([0,5,8,10,11,12,22,26,],[4,4,4,4,4,4,4,4,]),'NOT':([0,5,8,10,11,12,22,26,],[5,5,5,5,5,5,5,5,]),'FALSE':([0,5,8,10,11,12,22,26,],[6,6,6,6,6,6,6,6,]),'TRUE':([0,5,8,10,11,12,22,26,],[7,7,7,7,7,7,7,7,]),'LPAREN':([0,3,5,8,10,11,12,22,23,26,],[8,14,8,8,8,8,8,8,14,8,]),'SYMBOL':([0,2,4,5,8,10,11,12,14,18,22,26,31,],[3,13,15,3,3,3,3,3,23,23,3,3,23,]),'$end':([1,3,6,7,16,19,20,21,23,27,28,29,30,32,],[0,-10,-7,-8,-6,-3,-4,-5,-13,-9,-11,-1,-12,-2,]),'IMPLIES':([1,3,6,7,16,17,19,20,21,23,27,28,29,30,32,],[10,-10,-7,-8,-6,10,10,-4,-5,-13,-9,-11,10,-12,10,]),'OR':([1,3,6,7,16,17,19,20,21,23,27,28,29,30,32,],[11,-10,-7,-8,-6,11,11,-4,-5,-13,-9,-11,11,-12,11,]),'AND':([1,3,6,7,16,17,19,20,21,23,27,28,29,30,32,],[12,-10,-7,-8,-6,12,12,12,-5,-13,-9,-11,12,-12,12,]),'RPAREN':([3,6,7,16,17,19,20,21,23,24,25,27,28,29,30,32,33,],[-10,-7,-8,-6,27,-3,-4,-5,-13,30,-15,-9,-11,-1,-12,-2,-14,]),'EQUALS':([3,9,30,],[-13,18,-12,]),'COLON':([13,15,],[22,26,]),'COMMA':([23,25,30,],[-13,31,-12,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'FORMULA':([0,5,8,10,11,12,22,26,],[1,16,17,19,20,21,29,32,]),'TERM':([0,5,8,10,11,12,14,18,22,26,31,],[9,9,9,9,9,9,25,28,9,9,25,]),'TERMLIST':([14,31,],[24,33,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> FORMULA","S'",1,None,None,None),
  ('FORMULA -> FORALL SYMBOL COLON FORMULA','FORMULA',4,'p_formula_quantifier','FOL_v2.py',240),
  ('FORMULA -> EXISTS SYMBOL COLON FORMULA','FORMULA',4,'p_formula_quantifier','FOL_v2.py',241),
  ('FORMULA -> FORMULA IMPLIES FORMULA','FORMULA',3,'p_formula_binary','FOL_v2.py',245),
  ('FORMULA -> FORMULA OR FORMULA','FORMULA',3,'p_formula_binary','FOL_v2.py',246),
  ('FORMULA -> FORMULA AND FORMULA','FORMULA',3,'p_formula_binary','FOL_v2.py',247),
  ('FORMULA -> NOT FORMULA','FORMULA',2,'p_formula_not','FOL_v2.py',251),
  ('FORMULA -> FALSE','FORMULA',1,'p_formula_boolean','FOL_v2.py',255),
  ('FORMULA -> TRUE','FORMULA',1,'p_formula_boolean','FOL_v2.py',256),
  ('FORMULA -> LPAREN FORMULA RPAREN','FORMULA',3,'p_formula_group','FOL_v2.py',260),
  ('FORMULA -> SYMBOL','FORMULA',1,'p_formula_symbol','FOL_v2.py',264),
  ('FORMULA -> TERM EQUALS TERM','FORMULA',3,'p_formula_equals','FOL_v2.py',268),
  ('TERM -> SYMBOL LPAREN TERMLIST RPAREN','TERM',4,'p_term','FOL_v2.py',272),
  ('TERM -> SYMBOL','TERM',1,'p_term','FOL_v2.py',273),
  ('TERMLIST -> TERM COMMA TERMLIST','TERMLIST',3,'p_termlist','FOL_v2.py',277),
  ('TERMLIST -> TERM','TERMLIST',1,'p_termlist','FOL_v2.py',278),
]
